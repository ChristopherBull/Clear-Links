name: CI

on: [push, pull_request]

permissions:
  contents: read # for checkout

env:
  NODE_VER: 20

jobs:

  quality_checks:
    name: Quality Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js (LTS)
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VER }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Check spelling
        run: npm run spell
      - name: Lint all files
        run: npm run lint
      - name: Test (build, run tests, and coverage report)
        run: npm run test:unit:coverage
  
  e2e-tests:
    name: E2E Tests
    timeout-minutes: 60
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Install latest Playwright Browsers
      run: npm run test:e2e:prepare
    - name: Build (allowing install for E2E browser tests)
      run: make
    - name: Run Playwright tests
      run: npx playwright test
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: E2E - Playwright Testing Report
        path: docs/test-results/e2e/playwright-report/
        retention-days: 30

  release:
    name: Release
    needs: [quality_checks, e2e-tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'chore(release):')
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: 'npm'
      - name: Install dependencies
        # Install dependencies from package.json with specific versions to ensure compatibility/reliability
        run: npm clean-install
      - name: Build # Copy src into `dist/` folder
        run: make
      - name: Release
        env:
          AMO_API_KEY: ${{ secrets.AMO_API_KEY }}
          AMO_API_SECRET: ${{ secrets.AMO_API_SECRET }}
          EXTENSION_ID: ${{secrets.EXTENSION_ID}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOOGLE_CLIENT_ID: ${{secrets.GOOGLE_CLIENT_ID}}
          GOOGLE_CLIENT_SECRET: ${{secrets.GOOGLE_CLIENT_SECRET}}
          GOOGLE_REFRESH_TOKEN: ${{secrets.GOOGLE_REFRESH_TOKEN}}
        run: npx semantic-release
