{
    "env": {
        "browser": true,
        "es2024": true,
        "node": true,
        "webextensions": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:mocha/recommended",
        "plugin:sonarjs/recommended",
        "plugin:import/recommended",
        // "plugin:promise/recommended", // TODO renable and fix issues later
        // "plugin:jsdoc/recommended",// TODO renable and fix issues later
        "plugin:css/recommended"
    ],
    "globals": {
        "gapi": "readonly" // TODO: Remove this (once gapi is removed and migrated to new Google auth service)
    },
    "ignorePatterns": [
        ".nyc_output/",
        "build/",
        "coverage/",
        "dist/",
        "node_modules/",
        "playwright-report/",
        "test-results/"
    ],
    "overrides": [
        {
            // HTML-only liniting of HTML files
            "files": ["*.html"],
            "parser": "@html-eslint/parser",
            "extends": ["plugin:@html-eslint/recommended"]
        },
        {
            // Playwright uses destructing in tests/fixtures
            "files": ["*/e2e/*.test.js", "*/e2e/*.spec.js", "*/e2e/fixtures/*.js"],
            "rules": {
                "no-empty-pattern": "off"
            }
        }
    ],
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "plugins": [
        // Test linting
        "mocha",
        // Style linting
        "@stylistic",
        // General linting
        "@html-eslint",
        "sonarjs",
        "import",
        // "promise", // TODO renable and fix issues later
        // "jsdoc", // TODO renable and fix issues later
        "css" // CSS within JS
      ],
    "rules": {
        "@html-eslint/lowercase": "error",
        "@html-eslint/no-multiple-empty-lines": "error",
        "@html-eslint/no-trailing-spaces": "warn",
        "@stylistic/comma-dangle": ["error", "always-multiline"],
        "@stylistic/indent": ["error", 2],
        "@stylistic/keyword-spacing": ["warn", { "before": true, "after": true }],
        "@stylistic/quotes": ["error", "single"],
        "@stylistic/semi": ["error", "always"],
        "curly": ["warn", "multi-line"],
        "default-case-last": "error",
        "dot-notation": "warn",
        "logical-assignment-operators": "warn",
        "new-cap": "warn",
        "no-alert": "warn",
        "no-array-constructor": "warn",
        "no-caller": "error",
        "no-console": ["error", { "allow": ["info", "warn", "error"] }],
        "no-duplicate-imports": "error",
        "no-else-return": "warn",
        "no-empty-static-block": "error",
        "no-eval": "error",
        "no-extend-native": "error",
        "no-extra-bind": "error",
        "no-extra-label": "error",
        "no-implicit-globals": "error",
        "no-implied-eval": "error",
        "no-iterator": "error",
        "no-label-var": "error",
        "no-lone-blocks": "error",
        "no-lonely-if": "warn",
        "no-loop-func": "error",
        "no-multi-assign": "error",
        "no-multi-str": "warn",
        "no-new": "error",
        "no-new-func": "error",
        "no-new-native-nonconstructor": "error",
        "no-new-wrappers": "error",
        "no-promise-executor-return": "error",
        "no-proto": "warn",
        "no-return-assign": "error",
        "no-script-url": "error",
        "no-shadow": "error",
        "no-template-curly-in-string": "error",
        "no-throw-literal": "error",
        "no-underscore-dangle" :"warn",
        "no-unmodified-loop-condition": "warn",
        "no-unneeded-ternary": "warn",
        "no-unreachable-loop": "warn",
        "no-unused-private-class-members": "warn",
        "no-useless-call": "warn",
        "no-useless-computed-key": "warn",
        "no-useless-concat": "warn",
        "no-useless-constructor": "warn",
        "no-useless-rename": "warn",
        "no-useless-return": "warn",
        "no-var": "error",
        "object-shorthand": "warn",
        "operator-assignment": "warn",
        "prefer-const": "warn",
        "prefer-object-has-own": "warn",
        "prefer-object-spread": "warn",
        "prefer-promise-reject-errors": "warn",
        "prefer-spread": "warn",
        "require-await": "error",
        "sort-imports": "warn",
        "sort-vars": "warn",
        "yoda": "warn",

        // TODO Update/enable these rules. Only temporarily disabled.
        "sonarjs/cognitive-complexity": 0,
        "sonarjs/no-duplicate-string": 0,
        "require-jsdoc": 0 // Temp disabled, but I like this rule
    }
}
